sellButton.addActionListener(new ActionListener() {
                                public void actionPerformed(ActionEvent e) {
                                    writer.write("sellButton");
                                    writer.println();
                                    writer.flush();

                                    System.out.println("sellButton pressed");
                                    JPanel panel = new JPanel(new GridLayout(5, 2));

                                    panel.add(new JLabel("Product Name:"));
                                    JTextField productNameField = new JTextField();
                                    panel.add(productNameField);

                                    panel.add(new JLabel("Store Name:"));
                                    JTextField storeNameField = new JTextField();
                                    panel.add(storeNameField);

                                    panel.add(new JLabel("Description:"));
                                    JTextField descriptionField = new JTextField();
                                    panel.add(descriptionField);

                                    panel.add(new JLabel("Quantity Selling:"));
                                    JTextField quantityField = new JTextField();
                                    panel.add(quantityField);

                                    panel.add(new JLabel("Price:"));
                                    JTextField priceField = new JTextField();
                                    panel.add(priceField);

                                    int result = JOptionPane.showConfirmDialog(null, panel, "Enter Product Details",
                                            JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

                                    if (result == JOptionPane.OK_OPTION) {
                                        try {
                                            String productName = productNameField.getText();
                                            String storeName = storeNameField.getText();
                                            String description = descriptionField.getText();
                                            int quantity = Integer.parseInt(quantityField.getText());
                                            double price = Double.parseDouble(priceField.getText());

                                            if (quantity <= 0 || price <= 0) {
                                                JOptionPane.showMessageDialog(null, "Quantity and price must be greater than zero", "Invalid Input", JOptionPane.ERROR_MESSAGE);
                                                writer.write("wrong");
                                                writer.println();
                                                writer.flush();
                                            } else {

                                                String productInfo = productName + "," + storeName + "," + description + "," + quantity + "," + price;

                                                writer.write(productInfo);
                                                writer.println();
                                                writer.flush();

                                                System.out.println("Product info " + productInfo);

                                                String storeNameExists = reader.readLine();

                                                if (storeNameExists.equals("existingStoreName")) {
                                                    JOptionPane.showMessageDialog(null, "Store name already exists! Please enter a different store name", "Not added", JOptionPane.INFORMATION_MESSAGE);
                                                } else if (storeNameExists.equals("noPreviousStoreName"))
                                                    JOptionPane.showMessageDialog(null, "Your product has been added to the market!", "Successfully Added", JOptionPane.INFORMATION_MESSAGE);
                                            }
                                        } catch (NumberFormatException ex) {
                                            JOptionPane.showMessageDialog(null, "Please enter valid numeric values for Quantity and Price", "Invalid Input", JOptionPane.ERROR_MESSAGE);
                                            writer.write("wrong");
                                            writer.println();
                                            writer.flush();
                                        } catch (IOException ex) {
                                            ex.printStackTrace();
                                        }
                                    } else {
                                        writer.write("PanelClosed");
                                        writer.println();
                                        writer.flush();
                                    }
                                }
                            });

                            editButton.addActionListener(new ActionListener() {
                                public void actionPerformed(ActionEvent e) {
                                    System.out.println("edit button");
                                    boolean cont = false;
                                    writer.write("editButton");
                                    writer.println();
                                    writer.flush();
                                    ArrayList<String> lines = new ArrayList<>();

                                    try {
                                        String line;
                                        while ((line = reader.readLine()) != null && !line.isEmpty()) {
                                            System.out.println("reader line " + line);
                                            lines.add(line);
                                        }
                                    } catch (IOException i) {
                                        i.printStackTrace();
                                    }
                                    ArrayList<Product> products = new ArrayList<>();
                                    if (lines.size() == 1 && lines.get(0).equals("Empty")) {
                                        JOptionPane.showMessageDialog(null, "No products to edit", "Error", JOptionPane.INFORMATION_MESSAGE);
                                    } else {
                                        System.out.println("lines" + lines);
                                        for (String productString : lines) {
                                            String[] parts = productString.split("Quantity Available: ");
                                            String productInfo = parts[0];
                                            String quantityAndPriceInfo = parts[1];

                                            String[] productInfoParts = productInfo.split(" ");
                                            String productName = productInfoParts[3];
                                            String storeName = productInfoParts[6];
                                            String descriptionOfProduct = productInfoParts[6];
                                            String[] quantityAndPriceInfoParts = quantityAndPriceInfo.split(" ");
                                            int quantityAvailable = Integer.parseInt(quantityAndPriceInfoParts[0]);
                                            Double price = Double.parseDouble(quantityAndPriceInfoParts[2]);

                                            products.add(new Product(productName, storeName, descriptionOfProduct, quantityAvailable, price));
                                        }

                                        System.out.println(products);

                                        String[] productOptions = new String[products.size()];
                                        for (int i = 0; i < products.size(); i++) {
                                            productOptions[i] = products.get(i).statisticsToString();
                                        }

                                        String selectedProduct = (String) JOptionPane.showInputDialog(
                                                null,
                                                "Select a product:",
                                                "Product Selection",
                                                JOptionPane.QUESTION_MESSAGE,
                                                null,
                                                productOptions,
                                                productOptions[0]
                                        );

                                        int selection = 0;
                                        Product selector = products.get(0);
                                        for (int k = 0; k < products.size(); k++) {
                                            if (products.get(k).statisticsToString().equals(selectedProduct)) {
                                                selectedProduct = products.get(k).statisticsToString();
                                                selector = products.get(k);
                                                selection = k;
                                                break;
                                            }
                                        }

                                        if (selectedProduct != null) {
                                            JOptionPane.showMessageDialog(null, "You selected:\n" + selector.toString());

                                            writer.write(Integer.toString(selection));
                                            writer.println();
                                            writer.flush();
                                            System.out.println("sent selection");

                                            JPanel panel = new JPanel(new GridLayout(5, 2));

                                            panel.add(new JLabel("New Product Name:"));
                                            JTextField productNameField = new JTextField();
                                            panel.add(productNameField);

                                            panel.add(new JLabel("New Store Name:"));
                                            JTextField storeNameField = new JTextField();
                                            panel.add(storeNameField);

                                            panel.add(new JLabel("New Description:"));
                                            JTextField descriptionField = new JTextField();
                                            panel.add(descriptionField);

                                            panel.add(new JLabel("New Quantity Selling:"));
                                            JTextField quantityField = new JTextField();
                                            panel.add(quantityField);

                                            panel.add(new JLabel("New Price:"));
                                            JTextField priceField = new JTextField();
                                            panel.add(priceField);

                                            int result = JOptionPane.showConfirmDialog(null, panel, "Enter Product Details",
                                                    JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

                                            if (result == JOptionPane.OK_OPTION) {
                                                try {
                                                    String newName = productNameField.getText();
                                                    String newStore = storeNameField.getText();
                                                    String newDescription = descriptionField.getText();
                                                    int newQuantity = Integer.parseInt(quantityField.getText());
                                                    double newPrice = Double.parseDouble(priceField.getText());

                                                    if (newQuantity <= 0 || newPrice <= 0) {
                                                        JOptionPane.showMessageDialog(null, "New Quantity and Price must be greater than zero", "Invalid Input", JOptionPane.ERROR_MESSAGE);
                                                        writer.write("wrong");
                                                        writer.println();
                                                        writer.flush();


                                                    } else {

                                                        writer.println(newName);
                                                        writer.flush();
                                                        writer.println(newStore);
                                                        writer.flush();
                                                        writer.println(newDescription);
                                                        writer.flush();


                                                        writer.println(newQuantity);
                                                        writer.flush();
                                                        writer.println(newPrice);
                                                        writer.flush();

                                                        String storeNameExists = reader.readLine();

                                                        if (storeNameExists.equals("existingStoreName")) {
                                                            JOptionPane.showMessageDialog(null, "Store name already exists! Please enter a different store name", "Not edited", JOptionPane.INFORMATION_MESSAGE);
                                                        } else if (storeNameExists.equals("noPreviousStoreName")) {
                                                            JOptionPane.showMessageDialog(null, "Your product has been edited!", "Successfully Edited", JOptionPane.INFORMATION_MESSAGE);
                                                        }
                                                    }
                                                } catch (NumberFormatException ex) {
                                                    JOptionPane.showMessageDialog(null, "Please enter valid numeric values for Quantity and Price", "Invalid Input", JOptionPane.ERROR_MESSAGE);
                                                    writer.write("wrong");
                                                    writer.println();
                                                    writer.flush();
                                                } catch (IOException ex) {
                                                    ex.printStackTrace();
                                                }

                                            } else if (result == JOptionPane.CLOSED_OPTION || result == JOptionPane.CANCEL_OPTION) {
                                                writer.write("PanelClosed");
                                                writer.println();
                                                writer.flush();
                                            }
                                        } else {
                                            writer.write("PanelClosed");
                                            writer.println();
                                            writer.flush();
                                            System.out.println("Closed");
                                        }
                                    }
                                }
                            });
