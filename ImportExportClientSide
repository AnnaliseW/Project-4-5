                            importButton.addActionListener(new ActionListener() {
                                public void actionPerformed(ActionEvent e) {
                                    writer.write("importButton");
                                    writer.println();
                                    writer.flush();

                                    String fileName = JOptionPane.showInputDialog(null, "Enter the filename (Products should be seperated by a new line:");

                                    //Example: importThis.txt
                                    if (fileName != null && !fileName.isEmpty()) {

                                        ArrayList<String> lines = new ArrayList<>();

                                        try (BufferedReader br = new BufferedReader(new FileReader(fileName))) {
                                            String line;
                                            while ((line = br.readLine()) != null) {
                                                lines.add(line);
                                            }
                                            String everything = "";
                                            for (int i = 0; i < lines.size() - 1; i++) {
                                                everything += lines.get(i);
                                                everything += "@@";
                                            }
                                            everything += lines.get(lines.size() - 1);

                                            System.out.println(everything);
                                            writer.write(everything);
                                            writer.println();
                                            writer.flush();

                                            JOptionPane.showMessageDialog(null, "Your products have been imported!", "Successfully imported", JOptionPane.INFORMATION_MESSAGE);

                                        } catch (IOException ioException) {
                                            JOptionPane.showMessageDialog(null, "Could not find file", "Error", JOptionPane.INFORMATION_MESSAGE);
                                        }

                                    } else {
                                        writer.write("PanelClosed");
                                        writer.println();
                                        writer.flush();
                                    }

                                }
                            });

                            exportButton.addActionListener(new ActionListener() {
                                public void actionPerformed(ActionEvent e) {
                                    System.out.println("export button");
                                    boolean cont = false;
                                    writer.write("exportButton");
                                    writer.println();
                                    writer.flush();

                                    ArrayList<String> lines = new ArrayList<>();


                                    ArrayList<Product> productList = new ArrayList<>();
                                    try {
                                        String line;
                                        while ((line = reader.readLine()) != null && !line.isEmpty()) {
                                            lines.add(line);
                                        }

                                    } catch (IOException i) {
                                        i.printStackTrace();
                                    }
                                    ArrayList<Product> products = new ArrayList<>();
                                    if (lines.size() == 1 && lines.get(0).equals("Empty")) {
                                        JOptionPane.showMessageDialog(null, "No products to delete", "Error", JOptionPane.INFORMATION_MESSAGE);
                                    } else {
                                        for (String productString : lines) {
                                            String[] parts = productString.split("Quantity Available: ");
                                            String productInfo = parts[0];
                                            String quantityAndPriceInfo = parts[1];

                                            String[] productInfoParts = productInfo.split(" ");
                                            String productName = productInfoParts[3];
                                            String storeName = productInfoParts[6];
                                            String descriptionOfProduct = productInfoParts[6];
                                            String[] quantityAndPriceInfoParts = quantityAndPriceInfo.split(" ");
                                            int quantityAvailable = Integer.parseInt(quantityAndPriceInfoParts[0]);
                                            Double price = Double.parseDouble(quantityAndPriceInfoParts[2]);

                                            products.add(new Product(productName, storeName, descriptionOfProduct, quantityAvailable, price));
                                        }

                                        String[] productOptions = new String[products.size()];
                                        for (int i = 0; i < products.size(); i++) {
                                            productOptions[i] = products.get(i).statisticsToString();
                                        }

                                        String selectedProduct = (String) JOptionPane.showInputDialog(
                                                null,
                                                "Select a product:",
                                                "Product Selection",
                                                JOptionPane.QUESTION_MESSAGE,
                                                null,
                                                productOptions,
                                                productOptions[0]
                                        );


                                        int selection = 0;
                                        Product selector = products.get(0);
                                        for (int k = 0; k < products.size(); k++) {
                                            if (products.get(k).statisticsToString().equals(selectedProduct)) {
                                                selectedProduct = products.get(k).statisticsToString();
                                                selector = products.get(k);
                                                selection = k;
                                                break;
                                            }
                                        }

                                        if (selectedProduct != null) {
                                            JOptionPane.showMessageDialog(null, "You exported:\n" + selector.toString());

                                            writer.write(Integer.toString(selection));
                                            writer.println();
                                            writer.flush();

                                            System.out.println("Reached");

                                        } else {
                                            writer.write("PanelClosed");
                                            writer.println();
                                            writer.flush();
                                        }


                                    }
                                    
                                }
                            });
