} else if (indexOfChoice == 2) {
                                        exportedProducts = new ArrayList<Product>();
                                        int indexOfDeletion = 0;
                                        while (true) {
                                            for (int i = 0; i < itemsSoldBySeller.size(); i++) {
                                                System.out.println("[" + (i + 1) + "] " + itemsSoldBySeller.get(i).listingPagetoString() + "\n");
                                            }
                                            System.out.println("Choose product index you want to export\nEnter [-1] to stop");
                                            try {
                                                indexOfDeletion = s.nextInt();
                                                s.nextLine();
                                            } catch (InputMismatchException e) {
                                                s.nextLine();
                                            }
                                            if (indexOfDeletion == -1) {
                                                break;
                                            } else if (indexOfDeletion > 0 && indexOfDeletion <= itemsSoldBySeller.size()) {
                                                Methods method = new Methods();
                                                Product deletedProduct = itemsSoldBySeller.get(indexOfDeletion - 1);

                                                for (int i = 0; i < Methods.productsOnMarket.size(); i++) {
                                                    if (Methods.productsOnMarket.get(i).equals(deletedProduct)) {
                                                        exportedProducts.add(Methods.productsOnMarket.get(i));
                                                        Methods.productsOnMarket.remove(i);
                                                        ArrayList<Product> update = Methods.getProductsOnMarket();
                                                        Methods.setProductsOnMarket(update);
                                                    }
                                                }
                                                itemsSoldBySeller.remove(indexOfDeletion - 1);
                                                method.saveArrayListToFile(itemsSoldBySeller, userAccount);
                                                method.saveProductArrayList(Methods.productsOnMarket);

                                            } else {
                                                System.out.println("Invalid index. Please enter a valid index.\n");
                                            }

                                        }
                                        if (exportedProducts.isEmpty()) {
                                            System.out.println("No products to export.");
                                        } else {
                                            try {
                                                if (filesObject.exportProducts(exportedProducts)) {
                                                    System.out.println("Exported Successfully.");
                                                }
                                            } catch (IOException e) {
                                                e.printStackTrace();
                                            }
                                        }
                                    } else if (indexOfChoice == 3) {
                                        break;
                                    } else {
                                        System.out.println("Invalid Choice\n");
                                    }
