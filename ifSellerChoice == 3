else if (sellerChoice == 3) {

                                //lists all products selling
                                for (int i = 0; i < itemsSoldBySeller.size(); i++) {
                                    System.out.println(("[" + (i + 1) + "]") + " " + itemsSoldBySeller.get(i).listingPagetoString() + "\n");
                                }

                                boolean invalidInput = false;
                                int indexOfDeletion = 0;

                                do {
                                    System.out.println("Choose product index you want to remove\n[-1] to exit");

                                    try {
                                        indexOfDeletion = s.nextInt();
                                        s.nextLine();
                                        //if want to exit
                                        if (indexOfDeletion == -1) {
                                            Methods method = new Methods();
                                            method.saveArrayListToFile(itemsSoldBySeller, userAccount);
                                            method.saveProductArrayList(Methods.productsOnMarket);
                                            invalidInput = true;
                                        }
                                        //adding check if index is valid
                                        //adding -1 to exit
                                        else if (indexOfDeletion > itemsSoldBySeller.size() || indexOfDeletion < 0) {
                                            System.out.println("Invalid input, try again\n");
                                        } else {
                                            invalidInput = true;
                                        }
                                        // if not integer
                                    } catch (InputMismatchException e) {
                                        System.out.println("Please input integer\n");
                                        s.nextLine();
                                    }


                                } while (!invalidInput);

                                if (indexOfDeletion == -1) {
                                    Methods method = new Methods();
                                    method.saveArrayListToFile(itemsSoldBySeller, userAccount);
                                    method.saveProductArrayList(Methods.productsOnMarket);
                                    //logs out
                                } else {

                                    //deletes product
                                    Methods method = new Methods();

                                    System.out.println(itemsSoldBySeller.get(indexOfDeletion - 1).getProductName() + " removed from market!\n");

                                    Product deletedProduct = itemsSoldBySeller.get(indexOfDeletion - 1);

                                    boolean found = false; //deete this
                                    for (int i = 0; i < Methods.productsOnMarket.size(); i++) {
                                        if (Methods.productsOnMarket.get(i).equals(deletedProduct)) {
                                            found = true;  //deete this
                                            Methods.productsOnMarket.remove(i);
                                            ArrayList<Product> update = Methods.getProductsOnMarket();
                                            Methods.setProductsOnMarket(update);
                                        }
                                    }
                                    if (found) {
                                        System.out.println("Found"); //delete all of this
                                    } else {
                                        System.out.println("Did not find"); //delete all of this
                                    }

                                    itemsSoldBySeller.remove(indexOfDeletion - 1);
                                    method.saveArrayListToFile(itemsSoldBySeller, userAccount);
                                    method.saveProductArrayList(Methods.productsOnMarket);
                                    //exit out of while loop
                                }
