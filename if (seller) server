if (sellerOrBuyer.equals("seller")) {
                        
                        // PROCESSING FOR SELLER
                        boolean exitSeller = false;
                        Methods method = new Methods();

                        String userName = reader.readLine();
                        String userEmail = reader.readLine();
                        String userPassword = reader.readLine();

                        userAccount = new User(userName, userEmail, userPassword, true);

                        ArrayList<Product> myProducts = method.generateMyProducts(userAccount);


                        while (!exitSeller) {

                            String button = reader.readLine();

                            if (button.equals("sellButton")) {
                                System.out.println("Sell pressed");
                                String productToSell = reader.readLine();

                                if (productToSell.equals("PanelClosed")) {

                                } else {

                                    String[] productInfoParts = productToSell.split(",");
                                    String productName = productInfoParts[0];
                                    String storeName = productInfoParts[1];
                                    String description = productInfoParts[2];
                                    int quantity = Integer.parseInt(productInfoParts[3]);
                                    double price = Double.parseDouble(productInfoParts[4]);

                                    Product sellThis = new Product(productName, storeName, description, quantity, price);

                                    //myProducts arraylist (in server)
                                    myProducts.add(sellThis);
                                    //Products arraylist (all products on market)
                                    Methods.productsOnMarket.add(sellThis);
                                    method.saveProductFile(Methods.productsOnMarket);
                                    //Data file (data for each account)
                                    method.saveDataFileWhenNewProductAddedUserAccount(userAccount, sellThis);

                                    writer.println("Success");
                                    writer.println();
                                    writer.flush();
                                }

                            } else if (button.equals("editButton")) {
                                if (myProducts.isEmpty()) {
                                    System.out.println("Empty");
                                    writer.println("Empty");
                                    writer.println();
                                    writer.flush();
                                } else {
                                    for (Product product : myProducts) {
                                        writer.println(product.statisticsToStringNoSpace());
                                    }

                                    writer.println();
                                    writer.flush();
                                    String closeSelect = reader.readLine();
                                    if (closeSelect.equals("PanelClosed")) {

                                    } else {
                                        int selection = Integer.parseInt(closeSelect);
                                        System.out.println("selected item #" + selection);
                                        Product oldSelected = myProducts.get(selection);
                                        System.out.println("selected " + oldSelected.statisticsToString());


                                        String newProductName = reader.readLine();

if (newProductName.equals("PanelClosed")) {

                                        } else {
                                            String newStoreName = reader.readLine();
                                            String newDescription = reader.readLine();
                                            int newQuantity = Integer.parseInt(reader.readLine());
                                            double newPrice = Double.parseDouble(reader.readLine());

                                            Product newProduct = new Product(newProductName, newStoreName, newDescription, newQuantity, newPrice);

                                            //Products arraylist (all products on market)
                                            Methods.productsOnMarket = method.makeProductArrayList();
                                            int indexSelectionMarket = Methods.productsOnMarket.indexOf(oldSelected);

                                            for (Product product : Methods.productsOnMarket) {
                                                System.out.println(product.statisticsToStringNoSpace());
                                            }
                                            System.out.println();
                                            System.out.println("Product I want to change in myproducts");
                                            System.out.println(oldSelected.statisticsToStringNoSpace());
                                            System.out.println();


                                            System.out.println("New Product deets");
                                            System.out.println(newProduct.statisticsToStringNoSpace());
                                            System.out.println();

                                            for (Product product : myProducts) {
                                                if (product.statisticsToStringNoSpace().equals(oldSelected.statisticsToStringNoSpace())) {
                                                    System.out.println("I found the product I want to change in my products");
                                                    System.out.println(product.statisticsToStringNoSpace());
                                                    System.out.println("Here is where i chage it");
                                                    myProducts.set(myProducts.indexOf(product), newProduct);
                                                    System.out.println("Changed!");
                                                    System.out.println("Changed product in my products:");
                                                    System.out.println(myProducts.get(myProducts.indexOf(newProduct)).statisticsToStringNoSpace());
                                                    method.saveDataFileWithNewProductList(userAccount, myProducts);
                                                    break;
                                                }
                                            }

                                            for (Product product : Methods.productsOnMarket) {
                                                if (product.statisticsToStringNoSpace().equals(oldSelected.statisticsToStringNoSpace())) {
                                                    System.out.println("I found the product I want to change in the marketplace");
                                                    System.out.println(product.statisticsToStringNoSpace());
                                                    System.out.println("Here is where i chage it");
                                                    Methods.productsOnMarket.set(Methods.productsOnMarket.indexOf(product), newProduct);
                                                    System.out.println("Changed!");
                                                    System.out.println("Changed product in marketplace:");
                                                    System.out.println(Methods.productsOnMarket.get(Methods.productsOnMarket.indexOf(newProduct)).statisticsToStringNoSpace());
                                                    method.saveProductFile(Methods.productsOnMarket);
                                                    break;
                                                }
                                            }

                                            writer.println("Success");
                                            writer.println();
                                            writer.flush();
                                        }
                                    }
                                }



                            } else if (button.equals("deleteButton")) {

                                if (myProducts.isEmpty()) {
                                    System.out.println("Empty");
                                    writer.println("Empty");
                                    writer.println();
                                    writer.flush();
                                } else {
                                    for (Product product : myProducts) {
                                        writer.println(product.statisticsToStringNoSpace());
                                    }
                                    writer.println();
                                    writer.flush();
                                }



                                String closeSelect = reader.readLine();
                                if (closeSelect.equals("PanelClosed")) {

                                } else {
                                    int selection = Integer.parseInt(closeSelect);
                                    System.out.println("selected item #" + selection);
                                    Product itemToDelete = myProducts.get(selection);
                                    System.out.println("selected " + itemToDelete.statisticsToString());

                                    myProducts.remove(itemToDelete);
                                    method.saveDataFileWithNewProductList(userAccount, myProducts);
                                    System.out.println("Reached");


                                    for (Product p :Methods.productsOnMarket ) {
                                        System.out.println(p.statisticsToStringNoSpace());
                                        if (p.statisticsToStringNoSpace().equals(itemToDelete.statisticsToStringNoSpace())) {
                                            System.out.println("I found the product I want to remove in the marketplace");
                                            System.out.println(p.statisticsToStringNoSpace());
                                            System.out.println("Here is where i delete it");
                                            Methods.productsOnMarket.remove(itemToDelete);
                                            System.out.println("Deleted!");
                                            System.out.println("This should be -1:");
                                            System.out.println(Methods.productsOnMarket.indexOf(itemToDelete));


                                            
                                            method.deleteForProductFile(Methods.productsOnMarket, itemToDelete);
                                            break;

                                        }
                                    }






                                    System.out.println("Reached");


                                    writer.println("Success");
                                    writer.println();
                                    writer.flush();

                                }


                            } else if (button.equals("importButton")) {

                                ArrayList<String> receivedList = new ArrayList<>();

                                String closeSelect = reader.readLine();
                                if (closeSelect.equals("PanelClosed")) {

                                } else {
                                    String line;
                                    while ((line = reader.readLine()) != null) {
                                        receivedList.add(line);
                                    }
                                }

                                for (String productString : receivedList) {
                                    try {
                                        String[] parts = productString.split(",");
                                        String productName = parts[0];
                                        String storeName = parts[1];
                                        String descriptionOfProduct = parts[2];
                                        int quantityAvailable = Integer.parseInt(parts[3]);
                                        double price = Double.parseDouble(parts[4]);
                                        Product product = new Product(productName, storeName, descriptionOfProduct, quantityAvailable, price);
                                        //myProducts arraylist (in server)
                                        myProducts.add(product);
                                        //Products arraylist (all products on market)
                                        Methods.productsOnMarket.add(product);
                                        method.saveProductFile(Methods.productsOnMarket);
                                        //Data file (data for each account)
                                        method.saveDataFileWhenNewProductAddedUserAccount(userAccount, product);

                                    } catch (NumberFormatException e) {
                                        JOptionPane.showMessageDialog(null, "Error with number values. Please check File");
                                    }
                                }

                                writer.println("Success");
                                writer.println();
                                writer.flush();

                            } else if (button.equals("exportButton")) {

                                if (myProducts.size() == 0) {
                                    writer.println("Empty");
                                    writer.println();
                                    writer.flush();
                                } else {
                                    for (Product product : myProducts) {
                                        writer.println(product.toString());
                                    }
                                    writer.println();
                                    writer.flush();
                                }

                                int selection = Integer.parseInt(reader.readLine());

                                Product productToRemove = myProducts.get(selection);
                                myProducts.remove(selection);


                                //Products arraylist (all products on market)
                                Methods.productsOnMarket.remove(productToRemove);
                                method.saveProductFile(Methods.productsOnMarket);

                                //Data file (data for each account)
                                method.removeProductFromDataFile(userAccount, productToRemove);

                                writer.println("Success");
                                writer.println();
                                writer.flush();

                            } else if (button.equals("salesByStoreButton")) {
                                //TODO: salesbystore

                            }
                            if (button.equals("editProfileButton")) {
                                System.out.println("edit profile enter");
                                String profileInfo = reader.readLine();

                                if (profileInfo.equals("null")) {
                                    // exited out

                                } else {
                                    String[] partsNew = profileInfo.split(",");

                                    String newUserName = partsNew[0];
                                    String newEmail = partsNew[1];
                                    String newPassword = partsNew[2];


                                    method.changeAccount(newUserName, newEmail, newPassword, userAccount);


                                    if (!newUserName.equals(userAccount.getName())) {
                                        userAccount.setName(newUserName);
                                    }
                                    if (!newEmail.equals(userAccount.getEmail())) {
                                        userAccount.setEmail(newEmail);
                                    }
                                    if (!newPassword.equals(userAccount.getPassword())) {
                                        userAccount.setPassword(newPassword);
                                    }
                                    System.out.println("successful edit");

                                }

                            } else if (button.equals("deleteAccount")) {
                                method.removeAccount(userAccount);

                                writer.println("Success");
                                writer.println();
                                writer.flush();

                            } else if (button.equals("viewCustomerCartsButton")) {
                                //TODO: customerCarts

                            }

                        }
                        
                    }
